User token check
https://mherman.org/blog/2017/01/05/token-based-authentication-with-angular/#user-status

Modules
-Three types
    pages - modules that handle routing; only loaded once in appmodule or lazily
    global services - modules with services needed throughout the entire app
    reusable components - modules with reusable components (material, etc)

Feature Modules
    -must declare all of the components, directives and pipes it needs
    -must import commonmodule instead of browsermodule
    -it doesn't bootstrap anything
    -each module should have a routing module
    -every lazy loaded module has its own injector

appmodule > coremodule

-coremodule should perform a check to prevent loading it twice

    export class CoreModule {
        constructor(@Optional() @SkipSelf() core: CoreModule) {
            if(core) {
                throw new Error('CoreModule has already been loaded.')
            }
        }
    }

Login Page

LOGIN
user > logs in > creates JWT token > put token in cookie using HTTPONLY and SECURE

AES Portal

AUTH - GET ACCESS TOKEN
core-M > auth-S > isAuthenticated() > checks for access token (local storage)

AUTH - SET ACCESS TOKEN ON HTTP HEADER
core-M > http-S > setHeader() > set access token to header as Auth Bearer

AUTH - GET ID TOKEN
core-M > auth-S > getUserIdToken() with valid access token > return ID token

AUTH - GET USER DATA
core-M > user-S > getUserById(token.id) > user-Mdl singleton


USER OPENS AN APP FROM APP STORE

__handleAppClick(UUID): {
    this.appService.load(UUID)
}

/aes/portal/esn

canActivate {
    user must have app access
    user must have at least one app role
}

esn app module {
    constructor(appService) {
        this.appService.load(UUID)
    }
}

-user expands app store menu
-user selects ESN app from menu
-app service redirects to ESN app route
-route runs canActivate logic
 -user must have ESN app access
 -user must have at least one ESN app role
-route lazy loads ESN module
 -ESN module should depend on app module
-ESN module will load main component
-main component will call app service load(ESN app UUID)
-app module should be lazy loaded on first app load
-should only load app module regardless of apps loaded
-app module will export apps tab component
-ESN app will use app tab component in its template
-app tab component will subscribe to app service fns


/aes/portal/apps        -lazy loads app module, component loads <app-tabs> and <router-outlet>
/aes/portal/apps/esn    -lazy loads esn module